# This is a basic workflow to help you get started with Actions

name: armTemplateDeployment

# Controls when the workflow will run
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  resource_group_name: rg-githubactions
  # If there are spaces in the name, put quotes around the entire variable being referenced
  location: Germany West Central
  subscriptionId: b7b2edf5-3b33-4d1b-a916-9f552c4148c5

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  armDeploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: Azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Resource Group ${{ env.resource_group_name }}
        uses: Azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ env.subscriptionId }}
          region: West Europe
          template: ./arm-templates/resourcegroup.json
          parameters:
            # If there are spaces in the name, put quotes around the entire variable being referenced
            location="${{ env.location }}"
            resourceGroupName=${{ env.resource_group_name }}
          deploymentName: ${{ env.resource_group_name }}
      
      - name: Deploy Storage Account
        uses: Azure/arm-deploy@v2
        id: storageAccountDeploy
        with:
          scope: resourcegroup
          resourceGroupName: ${{ env.resource_group_name }}
          subscriptionId: ${{ env.subscriptionId }}
          template: ./arm-templates/storageaccount.json
          # Hybrid method: uses both the parameter file and hardcorde (override) parameters
          parameters: 
            ./arm-templates/storageaccount.parameters.json
            storageAccountName=githubstoragetmp02
            location="${{ env.location }}"
          deploymentMode: incremental
      
      - run: echo ${{ steps.storageAccountDeploy.outputs.BlobUri}}

      - name: Deploy Virtual Machine
        uses: Azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ${{ env.resource_group_name }}
          subscriptionId: ${{ env.subscriptionId }}
          template: ./arm-templates/virtualmachine.json
          # Hybrid method: uses both the parameter file and hardcorde (override) parameters
          parameters: 
            adminPassword=${{ secrets.UBUNTU_ADMIN_PASSWORD }}
            location="${{ env.location }}"
          deploymentMode: incremental
